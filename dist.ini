name    = IP-Geolocation-MMDB
version = 1.005
author  = Andreas Vögele <voegelas@cpan.org>
license = Perl_5
copyright_holder = Andreas Vögele

[@Filter]
-bundle = @Basic
-remove = GatherDir
-remove = MakeMaker
-remove = Readme

[MetaResources]
homepage        = https://gitlab.com/voegelas/ip-geolocation-mmdb
bugtracker.web  = https://gitlab.com/voegelas/ip-geolocation-mmdb/-/issues
repository.url  = https://gitlab.com/voegelas/ip-geolocation-mmdb.git
repository.web  = https://gitlab.com/voegelas/ip-geolocation-mmdb/-/tree/main
repository.type = git

[CPANFile]

[GatherDir]
exclude_filename = cpanfile
exclude_filename = LICENSE
exclude_filename = Makefile.PL
exclude_filename = META.json

[CopyFilesFromBuild]
copy = cpanfile
copy = LICENSE
copy = Makefile.PL
copy = META.json

[MetaProvides::Package]

[MetaJSON]

[PodCoverageTests]

[PodSyntaxTests]

[MakeMaker::Awesome]
delimiter = |
min_perl_version = 5.016

header = use Config;
WriteMakefile_arg = CCFLAGS => Alien::libmaxminddb->cflags . ' ' . $Config{ccflags}
WriteMakefile_arg = LIBS => [ Alien::libmaxminddb->libs ]

footer = use Alien::libmaxminddb;
footer = if (!Alien::libmaxminddb->atleast_version('1.2.0')) {
footer = |  warn "Error: libmaxminddb is too old.\n";
footer = |  die "OS unsupported\n";
footer = }

footer = # Some Math::BigInt versions fail on i386 if Perl is built with -Dusequadmath.
footer = use Math::BigInt;
footer = if (!eval { Math::BigInt->from_bytes(pack 'C6', 0xff, 0xff, 0xb0, 0x09, 0x00, 0x00)->as_hex eq '0xffffb0090000' }) {
footer = |  warn "Error: Math::BigInt is too old or broken.\n";
footer = |  die "OS unsupported\n";
footer = }

[Test::Kwalitee]

[Encoding]
encoding = bytes
match    = ^t/data/

[AutoPrereqs]

[Prereqs / ConfigureRequires]
Alien::libmaxminddb = 0

[Prereqs / DevelopRequires]
Dist::Zilla = 0
Dist::Zilla::Plugin::CopyFilesFromBuild = 0
Dist::Zilla::Plugin::MakeMaker::Awesome = 0.27
Dist::Zilla::Plugin::MetaProvides::Package = 0
Dist::Zilla::Plugin::Test::Kwalitee = 0
